{"version":3,"file":"index.js","sources":["../src/compat.js","../src/prop-types.js","../react-redux/utils/PropTypes.js","../react-redux/utils/warning.js","../react-redux/components/Provider.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../src/invariant.js","../react-redux/utils/Subscription.js","../react-redux/utils/tryToCall.js","../react-redux/components/connectAdvanced.js","../react-redux/utils/shallowEqual.js","../react-redux/utils/isPlainObject.js","../react-redux/connect/wrapMapToProps.js","../react-redux/connect/mapDispatchToProps.js","../react-redux/connect/mapStateToProps.js","../react-redux/connect/mergeProps.js","../react-redux/connect/selectorFactory.js","../react-redux/connect/connect.js","../src/index.js"],"sourcesContent":["/* eslint-disable-next-line import/no-unresolved */\nexport { createElement } from 'nervjs'\nexport { Component } from '@tarojs/taro-h5'\n\nconst EMPTY_ARRAY = []\nconst isArray = Array.isArray\nexport const Children = {\n  only (children) {\n    children = Children.toArray(children)\n    if (children.length !== 1) {\n      throw new Error('Provider expects only one child.')\n    }\n    return children[0]\n  },\n\n  toArray (children) {\n    if (children === null || children === void 0) {\n      return []\n    }\n    return isArray(children) ? children : EMPTY_ARRAY.concat(children)\n  }\n}\n","function proptype () { }\nproptype.isRequired = proptype\n\nconst getProptype = () => proptype\n\nconst PropTypes = {\n  element: getProptype,\n  func: getProptype,\n  shape: getProptype,\n  instanceOf: getProptype\n}\n\nexport default PropTypes\n","import PropTypes from 'prop-types'\n\nexport const subscriptionShape = PropTypes.shape({\n  trySubscribe: PropTypes.func.isRequired,\n  tryUnsubscribe: PropTypes.func.isRequired,\n  notifyNestedSubs: PropTypes.func.isRequired,\n  isSubscribed: PropTypes.func.isRequired,\n})\n\nexport const storeShape = PropTypes.shape({\n  subscribe: PropTypes.func.isRequired,\n  dispatch: PropTypes.func.isRequired,\n  getState: PropTypes.func.isRequired\n})\n","/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nexport default function warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message)\n  }\n  /* eslint-enable no-console */\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message)\n    /* eslint-disable no-empty */\n  } catch (e) {}\n  /* eslint-enable no-empty */\n}\n","import { Component, Children } from '../../src/compat'\nimport PropTypes from 'prop-types'\nimport { storeShape, subscriptionShape } from '../utils/PropTypes'\nimport warning from '../utils/warning'\n\nlet didWarnAboutReceivingStore = false\nfunction warnAboutReceivingStore() {\n  if (didWarnAboutReceivingStore) {\n    return\n  }\n  didWarnAboutReceivingStore = true\n\n  warning(\n    '<Provider> does not support changing `store` on the fly. ' +\n    'It is most likely that you see this error because you updated to ' +\n    'Redux 2.x and React Redux 2.x which no longer hot reload reducers ' +\n    'automatically. See https://github.com/reduxjs/react-redux/releases/' +\n    'tag/v2.0.0 for the migration instructions.'\n  )\n}\n\nexport function createProvider(storeKey = 'store') {\n    const subscriptionKey = `${storeKey}Subscription`\n\n    class Provider extends Component {\n        getChildContext() {\n          return { [storeKey]: this[storeKey], [subscriptionKey]: null }\n        }\n\n        constructor(props, context) {\n          super(props, context)\n          this[storeKey] = props.store;\n        }\n\n        render() {\n          return Children.only(this.props.children)\n        }\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      Provider.prototype.componentWillReceiveProps = function (nextProps) {\n        if (this[storeKey] !== nextProps.store) {\n          warnAboutReceivingStore()\n        }\n      }\n    }\n\n    Provider.propTypes = {\n        store: storeShape.isRequired,\n        children: PropTypes.element.isRequired,\n    }\n    Provider.childContextTypes = {\n        [storeKey]: storeShape.isRequired,\n        [subscriptionKey]: subscriptionShape,\n    }\n\n    return Provider\n}\n\nexport default createProvider()\n","'use strict';\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n    childContextTypes: true,\n    contextTypes: true,\n    defaultProps: true,\n    displayName: true,\n    getDefaultProps: true,\n    getDerivedStateFromProps: true,\n    mixins: true,\n    propTypes: true,\n    type: true\n};\n\nvar KNOWN_STATICS = {\n    name: true,\n    length: true,\n    prototype: true,\n    caller: true,\n    callee: true,\n    arguments: true,\n    arity: true\n};\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = getPrototypeOf && getPrototypeOf(Object);\n\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n    if (typeof sourceComponent !== 'string') { // don't hoist over string (html) components\n\n        if (objectPrototype) {\n            var inheritedComponent = getPrototypeOf(sourceComponent);\n            if (inheritedComponent && inheritedComponent !== objectPrototype) {\n                hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n            }\n        }\n\n        var keys = getOwnPropertyNames(sourceComponent);\n\n        if (getOwnPropertySymbols) {\n            keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n        }\n\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!REACT_STATICS[key] && !KNOWN_STATICS[key] && (!blacklist || !blacklist[key])) {\n                var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n                try { // Avoid failures from read-only properties\n                    defineProperty(targetComponent, key, descriptor);\n                } catch (e) {}\n            }\n        }\n\n        return targetComponent;\n    }\n\n    return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","export default () => {}\n","// encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nconst CLEARED = null\nconst nullListeners = { notify() {} }\n\nfunction createListenerCollection() {\n  // the current/next pattern is copied from redux's createStore code.\n  // TODO: refactor+expose that code to be reusable here?\n  let current = []\n  let next = []\n\n  return {\n    clear() {\n      next = CLEARED\n      current = CLEARED\n    },\n\n    notify() {\n      const listeners = current = next\n      for (let i = 0; i < listeners.length; i++) {\n        listeners[i]()\n      }\n    },\n\n    get() {\n      return next\n    },\n\n    subscribe(listener) {\n      let isSubscribed = true\n      if (next === current) next = current.slice()\n      next.push(listener)\n\n      return function unsubscribe() {\n        if (!isSubscribed || current === CLEARED) return\n        isSubscribed = false\n\n        if (next === current) next = current.slice()\n        next.splice(next.indexOf(listener), 1)\n      }\n    }\n  }\n}\n\nexport default class Subscription {\n  constructor(store, parentSub, onStateChange) {\n    this.store = store\n    this.parentSub = parentSub\n    this.onStateChange = onStateChange\n    this.unsubscribe = null\n    this.listeners = nullListeners\n  }\n\n  addNestedSub(listener) {\n    this.trySubscribe()\n    return this.listeners.subscribe(listener)\n  }\n\n  notifyNestedSubs() {\n    this.listeners.notify()\n  }\n\n  isSubscribed() {\n    return Boolean(this.unsubscribe)\n  }\n\n  trySubscribe() {\n    if (!this.unsubscribe) {\n      this.unsubscribe = this.parentSub\n        ? this.parentSub.addNestedSub(this.onStateChange)\n        : this.store.subscribe(this.onStateChange)\n \n      this.listeners = createListenerCollection()\n    }\n  }\n\n  tryUnsubscribe() {\n    if (this.unsubscribe) {\n      this.unsubscribe()\n      this.unsubscribe = null\n      this.listeners.clear()\n      this.listeners = nullListeners\n    }\n  }\n}\n","/**\r\n * 尝试调用函数\r\n * \r\n * @param {function} func 调用的函数\r\n * @param {any} ctx 调用上下文\r\n * @param  {...any} args 函数调用参数\r\n * @returns {any} returnValue\r\n */\r\nexport const tryToCall = (func, ctx = null, ...args) => {\r\n  if (!func) return\r\n  if (ctx) {\r\n    return func.apply(ctx, args)\r\n  } else {\r\n    return func(...args)\r\n  }\r\n}\r\n","import hoistStatics from 'hoist-non-react-statics'\nimport invariant from 'invariant'\nimport { Component, createElement } from '../../src/compat'\nimport Subscription from '../utils/Subscription'\nimport { storeShape, subscriptionShape } from '../utils/PropTypes'\nimport { tryToCall } from '../utils/tryToCall'\n\n/* eslint-disable react/no-deprecated */\n\nconst getRoute = (component) => {\n  const vnode = component.vnode\n\n  if (component.isRoute) return component\n  if (!vnode) return {}\n  if (vnode._owner) return getRoute(vnode._owner)\n\n  return component\n}\n\nlet hotReloadingVersion = 0\nconst dummyState = {}\nfunction noop() {}\nfunction makeSelectorStateful(sourceSelector, store) {\n  // wrap the selector in an object that tracks its results between runs.\n  const selector = {\n    run: function runComponentSelector(props, { ctx }) {\n      try {\n        const nextProps = sourceSelector(store.getState(), props)\n        if (nextProps !== selector.props || selector.error) {\n          selector.shouldComponentUpdate = true\n\n          /**\n           * 如果是页面 根据目前&未来展示状态判断是否需要update\n           * 通过 selector.shouldComponentUpdate = false 阻止更新\n           */\n\n          const route = getRoute(ctx)\n          if (!route.matched) {\n            selector.__needForceUpdate = true\n            selector.shouldComponentUpdate = false\n          }\n          selector.props = nextProps\n          selector.error = null\n        }\n      } catch (error) {\n        selector.shouldComponentUpdate = true\n        selector.error = error\n      }\n    }\n  }\n\n  return selector\n}\n\nexport default function connectAdvanced(\n  /*\n    selectorFactory is a func that is responsible for returning the selector function used to\n    compute new props from state, props, and dispatch. For example:\n\n      export default connectAdvanced((dispatch, options) => (state, props) => ({\n        thing: state.things[props.thingId],\n        saveThing: fields => dispatch(actionCreators.saveThing(props.thingId, fields)),\n      }))(YourComponent)\n\n    Access to dispatch is provided to the factory so selectorFactories can bind actionCreators\n    outside of their selector as an optimization. Options passed to connectAdvanced are passed to\n    the selectorFactory, along with displayName and WrappedComponent, as the second argument.\n\n    Note that selectorFactory is responsible for all caching/memoization of inbound and outbound\n    props. Do not use connectAdvanced directly without memoizing results between calls to your\n    selector, otherwise the Connect component will re-render on every state or props change.\n  */\n  selectorFactory,\n  // options object:\n  {\n    // the func used to compute this HOC's displayName from the wrapped component's displayName.\n    // probably overridden by wrapper functions such as connect()\n    getDisplayName = name => `ConnectAdvanced(${name})`,\n\n    // shown in error messages\n    // probably overridden by wrapper functions such as connect()\n    methodName = 'connectAdvanced',\n\n    // if defined, the name of the property passed to the wrapped element indicating the number of\n    // calls to render. useful for watching in react devtools for unnecessary re-renders.\n    renderCountProp = undefined,\n\n    // determines whether this HOC subscribes to store changes\n    shouldHandleStateChanges = true,\n\n    // the key of props/context to get the store\n    storeKey = 'store',\n\n    // if true, the wrapped element is exposed by this HOC via the getWrappedInstance() function.\n    withRef = false,\n\n    // additional options are passed through to the selectorFactory\n    ...connectOptions\n  } = {}\n) {\n  const subscriptionKey = storeKey + 'Subscription'\n  const version = hotReloadingVersion++\n\n  const contextTypes = {\n    [storeKey]: storeShape,\n    [subscriptionKey]: subscriptionShape,\n  }\n  const childContextTypes = {\n    [subscriptionKey]: subscriptionShape,\n  }\n\n  return function wrapWithConnect(WrappedComponent) {\n    invariant(\n      typeof WrappedComponent == 'function',\n      `You must pass a component to the function returned by ` +\n      `${methodName}. Instead received ${JSON.stringify(WrappedComponent)}`\n    )\n\n    const wrappedComponentName = WrappedComponent.displayName\n      || WrappedComponent.name\n      || 'Component'\n\n    const displayName = getDisplayName(wrappedComponentName)\n\n    const selectorFactoryOptions = {\n      ...connectOptions,\n      getDisplayName,\n      methodName,\n      renderCountProp,\n      shouldHandleStateChanges,\n      storeKey,\n      withRef,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent\n    }\n\n    class Connect extends Component {\n      constructor(props, context) {\n        super(props, context)\n\n        this.version = version\n        this.state = {}\n        this.renderCount = 0\n        this.store = props[storeKey] || context[storeKey]\n        this.propsMode = Boolean(props[storeKey])\n\n        invariant(this.store,\n          `Could not find \"${storeKey}\" in either the context or props of ` +\n          `\"${displayName}\". Either wrap the root component in a <Provider>, ` +\n          `or explicitly pass \"${storeKey}\" as a prop to \"${displayName}\".`\n        )\n\n        this.initSelector()\n        this.initSubscription()\n      }\n\n      get config () {\n        return this.wrappedInstance ? this.wrappedInstance.config : {}\n      }\n\n      getChildContext() {\n        // If this component received store from props, its subscription should be transparent\n        // to any descendants receiving store+subscription from context; it passes along\n        // subscription passed to it. Otherwise, it shadows the parent subscription, which allows\n        // Connect to control ordering of notifications to flow top-down.\n        const subscription = this.propsMode ? null : this.subscription\n        return { [subscriptionKey]: subscription || this.context[subscriptionKey] }\n      }\n\n      componentDidMount() {\n        if (!shouldHandleStateChanges) return\n\n        // componentWillMount fires during server side rendering, but componentDidMount and\n        // componentWillUnmount do not. Because of this, trySubscribe happens during ...didMount.\n        // Otherwise, unsubscription would never take place during SSR, causing a memory leak.\n        // To handle the case where a child component may have triggered a state change by\n        // dispatching an action in its componentWillMount, we have to re-run the select and maybe\n        // re-render.\n        this.subscription.trySubscribe()\n        this.selector.run(this.props, { ctx: this })\n        if (this.selector.shouldComponentUpdate) this.forceUpdate()\n      }\n\n      componentDidShow () {\n        if (this.selector.__needForceUpdate) {\n          this.forceUpdate()\n          this.selector.__needForceUpdate = false\n        }\n        tryToCall(this.wrappedInstance.componentDidShow, this.wrappedInstance)\n      }\n\n      componentWillReceiveProps(nextProps) {\n        this.selector.run(nextProps, { ctx: this })\n      }\n\n      shouldComponentUpdate() {\n        return this.selector.shouldComponentUpdate\n      }\n\n      componentWillUnmount() {\n        if (this.subscription) this.subscription.tryUnsubscribe()\n        this.subscription = null\n        this.notifyNestedSubs = noop\n        this.store = null\n        this.selector.run = noop\n        this.selector.shouldComponentUpdate = false\n      }\n\n      componentDidHide() {\n        tryToCall(this.wrappedInstance.componentDidHide, this.wrappedInstance)\n      }\n\n      getWrappedInstance() {\n        invariant(withRef,\n          `To access the wrapped instance, you need to specify ` +\n          `{ withRef: true } in the options argument of the ${methodName}() call.`\n        )\n        return this.wrappedInstance\n      }\n\n      setWrappedInstance = (ref) => {\n        if (ref === null) return\n        this.wrappedInstance = ref\n      }\n\n      initSelector() {\n        const sourceSelector = selectorFactory(this.store.dispatch, selectorFactoryOptions)\n        this.selector = makeSelectorStateful(sourceSelector, this.store)\n        this.selector.run(this.props, { ctx: this })\n      }\n\n      initSubscription() {\n        if (!shouldHandleStateChanges) return\n\n        // parentSub's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n        const parentSub = (this.propsMode ? this.props : this.context)[subscriptionKey]\n        this.subscription = new Subscription(this.store, parentSub, this.onStateChange.bind(this))\n\n        // `notifyNestedSubs` is duplicated to handle the case where the component is  unmounted in\n        // the middle of the notification loop, where `this.subscription` will then be null. An\n        // extra null check every change can be avoided by copying the method onto `this` and then\n        // replacing it with a no-op on unmount. This can probably be avoided if Subscription's\n        // listeners logic is changed to not call listeners that have been unsubscribed in the\n        // middle of the notification loop.\n        this.notifyNestedSubs = this.subscription.notifyNestedSubs.bind(this.subscription)\n      }\n\n      onStateChange() {\n        this.selector.run(this.props, { ctx: this })\n\n        if (!this.selector.shouldComponentUpdate) {\n          this.notifyNestedSubs()\n        } else {\n          this.componentDidUpdate = this.notifyNestedSubsOnComponentDidUpdate\n          this.setState(dummyState)\n        }\n      }\n\n      notifyNestedSubsOnComponentDidUpdate() {\n        // `componentDidUpdate` is conditionally implemented when `onStateChange` determines it\n        // needs to notify nested subs. Once called, it unimplements itself until further state\n        // changes occur. Doing it this way vs having a permanent `componentDidUpdate` that does\n        // a boolean check every time avoids an extra method call most of the time, resulting\n        // in some perf boost.\n        this.componentDidUpdate = undefined\n        this.notifyNestedSubs()\n      }\n\n      isSubscribed() {\n        return Boolean(this.subscription) && this.subscription.isSubscribed()\n      }\n\n      addExtraProps(props) {\n        // if (!withRef && !renderCountProp && !(this.propsMode && this.subscription)) return props\n        // make a shallow copy so that fields added don't leak to the original selector.\n        // this is especially important for 'ref' since that's a reference back to the component\n        // instance. a singleton memoized selector would then be holding a reference to the\n        // instance, preventing the instance from being garbage collected, and that would be bad\n        const withExtras = { ...props }\n        // if (withRef) withExtras.ref = this.setWrappedInstance\n        withExtras.ref = this.setWrappedInstance\n        if (renderCountProp) withExtras[renderCountProp] = this.renderCount++\n        if (this.propsMode && this.subscription) withExtras[subscriptionKey] = this.subscription\n        return withExtras\n      }\n\n      render() {\n        const selector = this.selector\n        selector.shouldComponentUpdate = false\n\n        if (selector.error) {\n          throw selector.error\n        } else {\n          return createElement(WrappedComponent, this.addExtraProps(selector.props))\n        }\n      }\n    }\n\n    Connect.WrappedComponent = WrappedComponent\n    Connect.displayName = displayName\n    Connect.childContextTypes = childContextTypes\n    Connect.contextTypes = contextTypes\n    Connect.propTypes = contextTypes\n\n    if (process.env.NODE_ENV !== 'production') {\n      Connect.prototype.componentWillUpdate = function componentWillUpdate() {\n        // We are hot reloading!\n        if (this.version !== version) {\n          this.version = version\n          this.initSelector()\n\n          // If any connected descendants don't hot reload (and resubscribe in the process), their\n          // listeners will be lost when we unsubscribe. Unfortunately, by copying over all\n          // listeners, this does mean that the old versions of connected descendants will still be\n          // notified of state changes; however, their onStateChange function is a no-op so this\n          // isn't a huge deal.\n          let oldListeners = [];\n\n          if (this.subscription) {\n            oldListeners = this.subscription.listeners.get()\n            this.subscription.tryUnsubscribe()\n          }\n          this.initSubscription()\n          if (shouldHandleStateChanges) {\n            this.subscription.trySubscribe()\n            oldListeners.forEach(listener => this.subscription.listeners.subscribe(listener))\n          }\n        }\n      }\n    }\n\n    return hoistStatics(Connect, WrappedComponent)\n  }\n}\n","const hasOwn = Object.prototype.hasOwnProperty\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y\n  } else {\n    return x !== x && y !== y\n  }\n}\n\nexport default function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true\n\n  if (typeof objA !== 'object' || objA === null ||\n      typeof objB !== 'object' || objB === null) {\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) return false\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) ||\n        !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false\n    }\n  }\n\n  return true\n}\n","/**\r\n * @param {any} obj The object to inspect.\r\n * @returns {boolean} True if the argument appears to be a plain object.\r\n */\r\nexport default function isPlainObject(obj) {\r\n  if (typeof obj !== 'object' || obj === null) return false\r\n\r\n  let proto = obj\r\n  while (Object.getPrototypeOf(proto) !== null) {\r\n    proto = Object.getPrototypeOf(proto)\r\n  }\r\n\r\n  return Object.getPrototypeOf(obj) === proto\r\n}\r\n","import verifyPlainObject from '../utils/verifyPlainObject'\n\nexport function wrapMapToPropsConstant(getConstant) {\n  return function initConstantSelector(dispatch, options) {\n    const constant = getConstant(dispatch, options)\n\n    function constantSelector() { return constant }\n    constantSelector.dependsOnOwnProps = false \n    return constantSelector\n  }\n}\n\n// dependsOnOwnProps is used by createMapToPropsProxy to determine whether to pass props as args\n// to the mapToProps function being wrapped. It is also used by makePurePropsSelector to determine\n// whether mapToProps needs to be invoked when props have changed.\n// \n// A length of one signals that mapToProps does not depend on props from the parent component.\n// A length of zero is assumed to mean mapToProps is getting args via arguments or ...args and\n// therefore not reporting its length accurately..\nexport function getDependsOnOwnProps(mapToProps) {\n  return (mapToProps.dependsOnOwnProps !== null && mapToProps.dependsOnOwnProps !== undefined)\n    ? Boolean(mapToProps.dependsOnOwnProps)\n    : mapToProps.length !== 1\n}\n\n// Used by whenMapStateToPropsIsFunction and whenMapDispatchToPropsIsFunction,\n// this function wraps mapToProps in a proxy function which does several things:\n// \n//  * Detects whether the mapToProps function being called depends on props, which\n//    is used by selectorFactory to decide if it should reinvoke on props changes.\n//    \n//  * On first call, handles mapToProps if returns another function, and treats that\n//    new function as the true mapToProps for subsequent calls.\n//    \n//  * On first call, verifies the first result is a plain object, in order to warn\n//    the developer that their mapToProps function is not returning a valid result.\n//    \nexport function wrapMapToPropsFunc(mapToProps, methodName) {\n  return function initProxySelector(dispatch, { displayName }) {\n    const proxy = function mapToPropsProxy(stateOrDispatch, ownProps) {\n      return proxy.dependsOnOwnProps\n        ? proxy.mapToProps(stateOrDispatch, ownProps)\n        : proxy.mapToProps(stateOrDispatch)\n    }\n\n    // allow detectFactoryAndVerify to get ownProps\n    proxy.dependsOnOwnProps = true\n\n    proxy.mapToProps = function detectFactoryAndVerify(stateOrDispatch, ownProps) {\n      proxy.mapToProps = mapToProps\n      proxy.dependsOnOwnProps = getDependsOnOwnProps(mapToProps)\n      let props = proxy(stateOrDispatch, ownProps)\n\n      if (typeof props === 'function') {\n        proxy.mapToProps = props\n        proxy.dependsOnOwnProps = getDependsOnOwnProps(props)\n        props = proxy(stateOrDispatch, ownProps)\n      }\n\n      if (process.env.NODE_ENV !== 'production') \n        verifyPlainObject(props, displayName, methodName)\n\n      return props\n    }\n\n    return proxy\n  }\n}\n","import { bindActionCreators } from 'redux'\nimport { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'\n\nexport function whenMapDispatchToPropsIsFunction(mapDispatchToProps) {\n  return (typeof mapDispatchToProps === 'function')\n    ? wrapMapToPropsFunc(mapDispatchToProps, 'mapDispatchToProps')\n    : undefined\n}\n\nexport function whenMapDispatchToPropsIsMissing(mapDispatchToProps) {\n  return (!mapDispatchToProps)\n    ? wrapMapToPropsConstant(dispatch => ({ dispatch }))\n    : undefined\n}\n\nexport function whenMapDispatchToPropsIsObject(mapDispatchToProps) {\n  return (mapDispatchToProps && typeof mapDispatchToProps === 'object')\n    ? wrapMapToPropsConstant(dispatch => bindActionCreators(mapDispatchToProps, dispatch))\n    : undefined\n}\n\nexport default [\n  whenMapDispatchToPropsIsFunction,\n  whenMapDispatchToPropsIsMissing,\n  whenMapDispatchToPropsIsObject\n]\n","import { wrapMapToPropsConstant, wrapMapToPropsFunc } from './wrapMapToProps'\n\nexport function whenMapStateToPropsIsFunction(mapStateToProps) {\n  return (typeof mapStateToProps === 'function')\n    ? wrapMapToPropsFunc(mapStateToProps, 'mapStateToProps')\n    : undefined\n}\n\nexport function whenMapStateToPropsIsMissing(mapStateToProps) {\n  return (!mapStateToProps)\n    ? wrapMapToPropsConstant(() => ({}))\n    : undefined\n}\n\nexport default [\n  whenMapStateToPropsIsFunction,\n  whenMapStateToPropsIsMissing\n]\n","import verifyPlainObject from '../utils/verifyPlainObject'\n\nexport function defaultMergeProps(stateProps, dispatchProps, ownProps) {\n  return { ...ownProps, ...stateProps, ...dispatchProps }\n}\n\nexport function wrapMergePropsFunc(mergeProps) {\n  return function initMergePropsProxy(\n    dispatch, { displayName, pure, areMergedPropsEqual }\n  ) {\n    let hasRunOnce = false\n    let mergedProps\n\n    return function mergePropsProxy(stateProps, dispatchProps, ownProps) {\n      const nextMergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n      if (hasRunOnce) {\n        if (!pure || !areMergedPropsEqual(nextMergedProps, mergedProps))\n          mergedProps = nextMergedProps\n\n      } else {\n        hasRunOnce = true\n        mergedProps = nextMergedProps\n\n        if (process.env.NODE_ENV !== 'production')\n          verifyPlainObject(mergedProps, displayName, 'mergeProps')\n      }\n\n      return mergedProps\n    }\n  }\n}\n\nexport function whenMergePropsIsFunction(mergeProps) {\n  return (typeof mergeProps === 'function')\n    ? wrapMergePropsFunc(mergeProps)\n    : undefined\n}\n\nexport function whenMergePropsIsOmitted(mergeProps) {\n  return (!mergeProps)\n    ? () => defaultMergeProps\n    : undefined\n}\n\nexport default [\n  whenMergePropsIsFunction,\n  whenMergePropsIsOmitted\n]\n","import verifySubselectors from './verifySubselectors'\n\nexport function impureFinalPropsSelectorFactory(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n  dispatch\n) {\n  return function impureFinalPropsSelector(state, ownProps) {\n    return mergeProps(\n      mapStateToProps(state, ownProps),\n      mapDispatchToProps(dispatch, ownProps),\n      ownProps\n    )\n  }\n}\n\nexport function pureFinalPropsSelectorFactory(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n  dispatch,\n  { areStatesEqual, areOwnPropsEqual, areStatePropsEqual }\n) {\n  let hasRunAtLeastOnce = false\n  let state\n  let ownProps\n  let stateProps\n  let dispatchProps\n  let mergedProps\n\n  function handleFirstCall(firstState, firstOwnProps) {\n    state = firstState\n    ownProps = firstOwnProps\n    stateProps = mapStateToProps(state, ownProps)\n    dispatchProps = mapDispatchToProps(dispatch, ownProps)\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    hasRunAtLeastOnce = true\n    return mergedProps\n  }\n\n  function handleNewPropsAndNewState() {\n    stateProps = mapStateToProps(state, ownProps)\n\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps)\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    return mergedProps\n  }\n\n  function handleNewProps() {\n    if (mapStateToProps.dependsOnOwnProps)\n      stateProps = mapStateToProps(state, ownProps)\n\n    if (mapDispatchToProps.dependsOnOwnProps)\n      dispatchProps = mapDispatchToProps(dispatch, ownProps)\n\n    mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n    return mergedProps\n  }\n\n  function handleNewState() {\n    const nextStateProps = mapStateToProps(state, ownProps)\n    const statePropsChanged = !areStatePropsEqual(nextStateProps, stateProps)\n    stateProps = nextStateProps\n\n    if (statePropsChanged)\n      mergedProps = mergeProps(stateProps, dispatchProps, ownProps)\n\n    return mergedProps\n  }\n\n  function handleSubsequentCalls(nextState, nextOwnProps) {\n    const propsChanged = !areOwnPropsEqual(nextOwnProps, ownProps)\n    const stateChanged = !areStatesEqual(nextState, state)\n    state = nextState\n    ownProps = nextOwnProps\n\n    if (propsChanged && stateChanged) return handleNewPropsAndNewState()\n    if (propsChanged) return handleNewProps()\n    if (stateChanged) return handleNewState()\n    return mergedProps\n  }\n\n  return function pureFinalPropsSelector(nextState, nextOwnProps) {\n    return hasRunAtLeastOnce\n      ? handleSubsequentCalls(nextState, nextOwnProps)\n      : handleFirstCall(nextState, nextOwnProps)\n  }\n}\n\n// TODO: Add more comments\n\n// If pure is true, the selector returned by selectorFactory will memoize its results,\n// allowing connectAdvanced's shouldComponentUpdate to return false if final\n// props have not changed. If false, the selector will always return a new\n// object and shouldComponentUpdate will always return true.\n\nexport default function finalPropsSelectorFactory(dispatch, {\n  initMapStateToProps,\n  initMapDispatchToProps,\n  initMergeProps,\n  ...options\n}) {\n  const mapStateToProps = initMapStateToProps(dispatch, options)\n  const mapDispatchToProps = initMapDispatchToProps(dispatch, options)\n  const mergeProps = initMergeProps(dispatch, options)\n\n  if (process.env.NODE_ENV !== 'production') {\n    verifySubselectors(mapStateToProps, mapDispatchToProps, mergeProps, options.displayName)\n  }\n\n  const selectorFactory = options.pure\n    ? pureFinalPropsSelectorFactory\n    : impureFinalPropsSelectorFactory\n\n  return selectorFactory(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps,\n    dispatch,\n    options\n  )\n}\n","import connectAdvanced from '../components/connectAdvanced'\nimport shallowEqual from '../utils/shallowEqual'\nimport defaultMapDispatchToPropsFactories from './mapDispatchToProps'\nimport defaultMapStateToPropsFactories from './mapStateToProps'\nimport defaultMergePropsFactories from './mergeProps'\nimport defaultSelectorFactory from './selectorFactory'\n\n/*\n  connect is a facade over connectAdvanced. It turns its args into a compatible\n  selectorFactory, which has the signature:\n\n    (dispatch, options) => (nextState, nextOwnProps) => nextFinalProps\n  \n  connect passes its args to connectAdvanced as options, which will in turn pass them to\n  selectorFactory each time a Connect component instance is instantiated or hot reloaded.\n\n  selectorFactory returns a final props selector from its mapStateToProps,\n  mapStateToPropsFactories, mapDispatchToProps, mapDispatchToPropsFactories, mergeProps,\n  mergePropsFactories, and pure args.\n\n  The resulting final props selector is called by the Connect component instance whenever\n  it receives new props or store state.\n */\n\nfunction match(arg, factories, name) {\n  for (let i = factories.length - 1; i >= 0; i--) {\n    const result = factories[i](arg)\n    if (result) return result\n  }\n\n  return (dispatch, options) => {\n    throw new Error(`Invalid value of type ${typeof arg} for ${name} argument when connecting component ${options.wrappedComponentName}.`)\n  }\n}\n\nfunction strictEqual(a, b) { return a === b }\n\n// createConnect with default args builds the 'official' connect behavior. Calling it with\n// different options opens up some testing and extensibility scenarios\nexport function createConnect({\n  connectHOC = connectAdvanced,\n  mapStateToPropsFactories = defaultMapStateToPropsFactories,\n  mapDispatchToPropsFactories = defaultMapDispatchToPropsFactories,\n  mergePropsFactories = defaultMergePropsFactories,\n  selectorFactory = defaultSelectorFactory\n} = {}) {\n  return function connect(\n    mapStateToProps,\n    mapDispatchToProps,\n    mergeProps,\n    {\n      pure = true,\n      areStatesEqual = strictEqual,\n      areOwnPropsEqual = shallowEqual,\n      areStatePropsEqual = shallowEqual,\n      areMergedPropsEqual = shallowEqual,\n      ...extraOptions\n    } = {}\n  ) {\n    const initMapStateToProps = match(mapStateToProps, mapStateToPropsFactories, 'mapStateToProps')\n    const initMapDispatchToProps = match(mapDispatchToProps, mapDispatchToPropsFactories, 'mapDispatchToProps')\n    const initMergeProps = match(mergeProps, mergePropsFactories, 'mergeProps')\n\n    return connectHOC(selectorFactory, {\n      // used in error messages\n      methodName: 'connect',\n\n       // used to compute Connect's displayName from the wrapped component's displayName.\n      getDisplayName: name => `Connect(${name})`,\n\n      // if mapStateToProps is falsy, the Connect component doesn't subscribe to store state changes\n      shouldHandleStateChanges: Boolean(mapStateToProps),\n\n      // passed through to selectorFactory\n      initMapStateToProps,\n      initMapDispatchToProps,\n      initMergeProps,\n      pure,\n      areStatesEqual,\n      areOwnPropsEqual,\n      areStatePropsEqual,\n      areMergedPropsEqual,\n\n      // any extra options args can override defaults of connect or connectAdvanced\n      ...extraOptions\n    })\n  }\n}\n\nexport default createConnect()\n","import { Provider, connect, connectAdvanced } from '../react-redux'\nexport { Provider, connect, connectAdvanced }\nexport default { Provider, connect, connectAdvanced }\n"],"names":["EMPTY_ARRAY","isArray","Array","Children","only","children","toArray","length","Error","concat","proptype","isRequired","getProptype","PropTypes","element","func","shape","instanceOf","subscriptionShape","trySubscribe","tryUnsubscribe","notifyNestedSubs","isSubscribed","storeShape","subscribe","dispatch","getState","createProvider","storeKey","subscriptionKey","Provider","getChildContext","props","context","store","render","Component","childContextTypes","REACT_STATICS","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromProps","mixins","propTypes","type","KNOWN_STATICS","name","prototype","caller","callee","arguments","arity","defineProperty","Object","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","keys","i","key","descriptor","e","module","CLEARED","nullListeners","notify","createListenerCollection","current","next","clear","listeners","get","listener","slice","push","unsubscribe","splice","indexOf","Subscription","parentSub","onStateChange","addNestedSub","Boolean","tryToCall","ctx","args","apply","getRoute","component","vnode","isRoute","_owner","hotReloadingVersion","dummyState","noop","makeSelectorStateful","sourceSelector","selector","run","runComponentSelector","nextProps","error","shouldComponentUpdate","route","matched","__needForceUpdate","connectAdvanced","selectorFactory","getDisplayName","methodName","renderCountProp","undefined","shouldHandleStateChanges","withRef","connectOptions","version","wrapWithConnect","WrappedComponent","invariant","JSON","stringify","wrappedComponentName","selectorFactoryOptions","Connect","ref","wrappedInstance","state","renderCount","propsMode","initSelector","initSubscription","subscription","componentDidMount","forceUpdate","componentDidShow","componentWillReceiveProps","componentWillUnmount","componentDidHide","getWrappedInstance","bind","componentDidUpdate","notifyNestedSubsOnComponentDidUpdate","setState","addExtraProps","withExtras","setWrappedInstance","createElement","config","hoistStatics","hasOwn","hasOwnProperty","is","x","y","shallowEqual","objA","objB","keysA","keysB","call","wrapMapToPropsConstant","getConstant","initConstantSelector","options","constant","constantSelector","dependsOnOwnProps","getDependsOnOwnProps","mapToProps","wrapMapToPropsFunc","initProxySelector","proxy","mapToPropsProxy","stateOrDispatch","ownProps","detectFactoryAndVerify","whenMapDispatchToPropsIsFunction","mapDispatchToProps","whenMapDispatchToPropsIsMissing","whenMapDispatchToPropsIsObject","bindActionCreators","whenMapStateToPropsIsFunction","mapStateToProps","whenMapStateToPropsIsMissing","defaultMergeProps","stateProps","dispatchProps","wrapMergePropsFunc","mergeProps","initMergePropsProxy","pure","areMergedPropsEqual","hasRunOnce","mergedProps","mergePropsProxy","nextMergedProps","whenMergePropsIsFunction","whenMergePropsIsOmitted","impureFinalPropsSelectorFactory","impureFinalPropsSelector","pureFinalPropsSelectorFactory","areStatesEqual","areOwnPropsEqual","areStatePropsEqual","hasRunAtLeastOnce","handleFirstCall","firstState","firstOwnProps","handleNewPropsAndNewState","handleNewProps","handleNewState","nextStateProps","statePropsChanged","handleSubsequentCalls","nextState","nextOwnProps","propsChanged","stateChanged","pureFinalPropsSelector","finalPropsSelectorFactory","initMapStateToProps","initMapDispatchToProps","initMergeProps","match","arg","factories","result","strictEqual","a","b","createConnect","connectHOC","mapStateToPropsFactories","defaultMapStateToPropsFactories","mapDispatchToPropsFactories","defaultMapDispatchToPropsFactories","mergePropsFactories","defaultMergePropsFactories","defaultSelectorFactory","connect","extraOptions"],"mappings":"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"}